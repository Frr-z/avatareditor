"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[266],{95168:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetCached","desc":"Retrieves cached data for a given URL.","params":[{"name":"Url","desc":"The URL to check in the cache.","lua_type":"string"}],"returns":[{"desc":"The cached data or nil if not found.","lua_type":"table?"}],"function_type":"method","source":{"line":47,"path":"src/server/MainModule/init.lua"}},{"name":"GetHumanoidDescriptionFromUserId","desc":"Retrieves a humanoid description from a user ID.","params":[{"name":"Id","desc":"The user ID.","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Promise<HumanoidDescription?>"}],"function_type":"method","source":{"line":58,"path":"src/server/MainModule/init.lua"}},{"name":"GetHumanoidDescriptionFromUsername","desc":"Retrieves a humanoid description from a username.","params":[{"name":"PlayerName","desc":"The username.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Promise<HumanoidDescription?>"}],"function_type":"method","source":{"line":78,"path":"src/server/MainModule/init.lua"}},{"name":"MorphFromPlayerIdAsync","desc":"Morphs a player into another player\'s avatar.","params":[{"name":"PlayerToBeMorphed","desc":"The player to be morphed.","lua_type":"Player"},{"name":"PlayerToMorphId","desc":"The ID of the player to morph into.","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Promise<void>"}],"function_type":"method","source":{"line":99,"path":"src/server/MainModule/init.lua"}},{"name":"RemovePlayerAccessories","desc":"Removes all accessories from a player\'s character.","params":[{"name":"Player","desc":"The player whose accessories will be removed.","lua_type":"Player"}],"returns":[],"function_type":"method","source":{"line":119,"path":"src/server/MainModule/init.lua"}},{"name":"RemoveModelAccessories","desc":"Removes all accessories from a model.","params":[{"name":"Model","desc":"The model whose accessories will be removed.","lua_type":"Instance"}],"returns":[],"function_type":"method","source":{"line":131,"path":"src/server/MainModule/init.lua"}},{"name":"AddPlayerAccessory","desc":"Adds an accessory to a player\'s character.","params":[{"name":"Player","desc":"The player to add the accessory to.","lua_type":"Player"},{"name":"Accessory","desc":"The accessory to add.","lua_type":"Accessory"}],"returns":[],"function_type":"method","source":{"line":143,"path":"src/server/MainModule/init.lua"}},{"name":"AddModelAccessory","desc":"Adds an accessory to a model.","params":[{"name":"Model","desc":"The model to add the accessory to.","lua_type":"Instance"},{"name":"Accessory","desc":"The accessory to add.","lua_type":"Accessory"}],"returns":[],"function_type":"method","source":{"line":156,"path":"src/server/MainModule/init.lua"}},{"name":"GetCharacterAppearanceInfoAsync","desc":"Retrieves character appearance information asynchronously.","params":[{"name":"Id","desc":"The user ID.","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Promise<table?>"}],"function_type":"method","source":{"line":168,"path":"src/server/MainModule/init.lua"}},{"name":"GetPlayerGears","desc":"Retrieves player gears asynchronously.","params":[{"name":"Id","desc":"The user ID.","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Promise<table?>"}],"function_type":"method","source":{"line":188,"path":"src/server/MainModule/init.lua"}},{"name":"GetUserInventoryAsync","desc":"Retrieves user inventory asynchronously.","params":[{"name":"Id","desc":"The user ID.","lua_type":"number"},{"name":"Cursor","desc":"The cursor for pagination.","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"Promise<table?>"}],"function_type":"method","source":{"line":215,"path":"src/server/MainModule/init.lua"}},{"name":"CheckIfUserOwnsItem","desc":"Checks if a user owns a specific item.","params":[{"name":"Id","desc":"The user ID.","lua_type":"number"},{"name":"ItemId","desc":"The item ID.","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Promise<boolean?>"}],"function_type":"method","source":{"line":261,"path":"src/server/MainModule/init.lua"}},{"name":"GetItemsByCategory","desc":"Retrieves items by category.","params":[{"name":"Category","desc":"The category of items.","lua_type":"string"},{"name":"Subcategory","desc":"The subcategory of items.","lua_type":"string?"},{"name":"SalesTypeFilter","desc":"The sales type filter.","lua_type":"string?"},{"name":"Cursor","desc":"The cursor for pagination.","lua_type":"string?"},{"name":"SortType","desc":"The sort type.","lua_type":"string?"},{"name":"CreatorName","desc":"The creator name.","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"Promise<table?>"}],"function_type":"method","source":{"line":292,"path":"src/server/MainModule/init.lua"}},{"name":"GetRolimonsLimitedsInfos","desc":"Retrieves Rolimons limiteds information.","params":[],"returns":[{"desc":"","lua_type":"Promise<table?>"}],"function_type":"method","source":{"line":323,"path":"src/server/MainModule/init.lua"}}],"properties":[],"types":[],"name":"AvatarEditor","desc":"A module to handle avatar-related functionalities.","source":{"line":13,"path":"src/server/MainModule/init.lua"}}')}}]);